---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xudong12.
--- DateTime: 2020/2/26 11:40 AM
---

module(..., package.seeall)

function conn(ip, port,auth)
    local redis_t = require("resty.redis")
    local redis, err = redis_t:new()
    if redis then
        local ok, err = redis:connect(ip, port)
        redis:set_timeout(10000) -- 2 sec
        if not ok then
            ngx.log(ngx.ERR, 'failed to conn Redis(' .. ip .. ':' .. port .. '): ' .. err)
        end
        local times, err = redis:get_reused_times()
        if auth then
            ok, err = redis:auth("redispassword")
            if not ok then
                ngx.say("failed to auth: ", err)
                return
            end
        end
        if times then
            ngx.log(ngx.INFO, 'MC(' .. ip .. ':' .. port .. ') reused times: ' .. times)
        end
        return redis
    else
        ngx.log(ngx.ERR, 'MC init error: ' .. err)
    end
    return nil
end

function close(redis)
    if not redis then
        return false
    end
    local ok, err = redis:set_keepalive(10000, 12)
    if not ok then
        ngx.log(ngx.INFO, 'failed to set keepalive of Redis: ' .. err)
        return false
    end
    ngx.log(ngx.INFO, 'succes set keepalive of Redis: ')
    return true
end

function real_close(redis)
    if not redis then
        return false
    end
    local ok, err = redis:close()
    if not ok then
        ngx.log(ngx.ERR, 'failed to close Redis: ' .. err)
        return false
    end
    return true
end

